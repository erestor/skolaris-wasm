# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# GNU Makefile based on shared rules provided by the Native Client SDK.
# See README.Makefiles for more details.

VALID_TOOLCHAINS := pnacl newlib glibc clang-newlib linux

NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../../nacl_sdk/pepper_49)

TARGET = skolaris

include $(NACL_SDK_ROOT)/tools/common.mk

LIBS = ppapi_cpp ppapi pthread

INCBOOST = /usr/local/include
INCCTOOLHU = /usr/local/include/ctoolhu
INCLOCALSEARCH = /usr/local/include/localsearch/include
INCDIRS = -I${INCBOOST} -I${INCCTOOLHU} -I${INCLOCALSEARCH}

NOERROR1 = no-error=unused-local-typedef
NOLOCALTYPEDEF = no-unused-local-typedef

CFLAGS = -Wall -W${NOLOCALTYPEDEF} -std=gnu++14 ${INCDIRS} -DBOOST_SYSTEM_NO_DEPRECATED

LDFLAGS = --pnacl-exceptions=sjlj

SOURCES = $(wildcard *.cc) \
	$(wildcard gascheduler/src/*.cpp) \
	$(wildcard gascheduler/src/matrix/*.cpp) \
	$(wildcard gascheduler/src/plugin/algorithm_builder.c*) \
	$(wildcard gascheduler/src/plugin/controller_builder.c*) \
	$(wildcard gascheduler/src/storage/*.cpp) \
	$(wildcard gascheduler/src/timetable/*.cpp) \
	$(wildcard gascheduler/src/timetable/algorithm/*.cpp) \
	$(wildcard gascheduler/src/timetable/analysis/*.cpp) \
	$(wildcard gascheduler/src/timetable/model/*.cpp) \
	$(wildcard ~/dev/localsearch/**/*.cpp)

# Build rules generated by macros from common.mk:

$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

# The PNaCl workflow uses both an unstripped and finalized/stripped binary.
# On NaCl, only produce a stripped binary for Release configs (not Debug).
ifneq (,$(or $(findstring pnacl,$(TOOLCHAIN)),$(findstring Release,$(CONFIG))))
$(eval $(call LINK_RULE,$(TARGET)_unstripped,$(SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LINK_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

$(eval $(call NMF_RULE,$(TARGET),))

copy:
	cp pnacl/Release/skolaris.* ~/Public

